services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=akasa
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    volumes:
      - ./postgres-order:/var/lib/postgresql/data
    ports:
      - "5432:5431"
    networks:
      - bootapp
    restart: unless-stopped

  serviceregistry:
    image: serviceregistry:latest
    container_name: serviceregistry
    ports:
      - "8761:8761"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/akasa?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=root
    networks:
      - bootapp

  apigateway:
    image: gateway:latest
    container_name: apigateway
    ports:
      - "9000:9000"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/akasa?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=root
    depends_on:
      - serviceregistry
      - userservice
    networks:
      - bootapp

  userservice:
    image: userservice:latest
    container_name: userservice
    ports:
      - "8080:8080"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/akasa?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=root
    depends_on:
      - serviceregistry
    networks:
      - bootapp

  orderservice:
    image: orderservice:latest
    container_name: orderservice
    ports:
      - "8086:8086"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/akasa?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=root
    depends_on:
      - serviceregistry
      - apigateway
    networks:
      - bootapp

  inventoryservice:
    image: inventoryservice:latest
    container_name: inventoryservice
    ports:
      - "8082:8082"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/akasa?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=root
    depends_on:
      - serviceregistry
      - apigateway
    networks:
      - bootapp

  cartservice:
    image: cartservice:latest
    container_name: cartservice
    ports:
      - "8084:8084"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/akasa?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=root
    depends_on:
      - serviceregistry
      - apigateway
      - inventoryservice
      - userservice
    networks:
      - bootapp

networks:
  bootapp:
    driver: bridge
